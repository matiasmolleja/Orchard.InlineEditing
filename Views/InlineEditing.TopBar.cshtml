@using Orchard.ContentManagement;
@using Orchard.Core.Contents;
@using Orchard.Mvc.Extensions;
@{
    ContentItem contentItem = (ContentItem)Model.ContentItem;

    // Retrieving if we are in EditorMode from Session. Maybe it is better using cookies.
    // Saving has been done before through an ajax call in the ko viewModel updateSessionValues
    var isEditorModeEnabledForThisSession = HttpContext.Current.Session["editorMode"];
    if (isEditorModeEnabledForThisSession == null)
    { isEditorModeEnabledForThisSession = false; }
    
}

@using (Script.Foot())
{
    <script type="text/javascript">

        // loading values into the ko viewmodel
        inlineEditing.IEPageVM.antiForgeryToken = '@Html.AntiForgeryTokenValueOrchard()';
        inlineEditing.IEPageVM.updatePartsUrl = '@Url.Action("UpdateParts", "InlineEditing", new { area = "Mmr.InlineEditing" })';
        inlineEditing.IEPageVM.updateSessionValuesUrl = '@Url.Action("UpdateSessionValues", "InlineEditing", new { area = "Mmr.InlineEditing" })';
        inlineEditing.IEPageVM.BaseUrl = '@WorkContext.CurrentSite.BaseUrl' ; 
        

        $(document).ready(function () {

            inlineEditing.IEPageVM.editorMode(@isEditorModeEnabledForThisSession.ToString().ToLower());

            // this is needed to update UI on first load.
            inlineEditing.IEPageVM.parts.valueHasMutated();

        });


        // spinner for ajax calls
        $(document)
          .ajaxStart(function () {
              $("#icon-save").removeClass("icon-save");
              $("#icon-save").addClass("icon-refresh icon-spin");
          })
          .ajaxStop(function () {
              $("#icon-save").removeClass("icon-refresh icon-spin icon-large");
              $("#icon-save").addClass("icon-save");
          });

        // unsaved changes warning
        $(window).bind('beforeunload', function () {
            if (inlineEditing.IEPageVM.isDirty()) {
                return "@T("You have unsaved changes.Are you sure you want to leave?")";
            }

        });
    </script>
}



<div class="inline-editing-topbar" data-bind="css:{ collapsedtopbar :isCollapsed , expandedtopbar : !isCollapsed() }">
    <ul id="command-bar">

        <li data-bind="visible: !isCollapsed()">
            <a href="#"
               title="@T("Collapse toolbar")"
               data-bind="click:collapseBar" class="collapse-button">
                <i class="icon-chevron-left"></i>
            </a>
        </li>

        <li>
            <a href="@Url.Action("Index", "Admin", new { area = "Dashboard" })" id="dashboard-link">ss</a>
        </li>
        <li data-bind="visible: isCollapsed">
            <a href="#"
               title="@T("Expand toolbar")"
               data-bind="click:collapseBar" class="collapse-button">
                <i class="icon-chevron-right" data-bind="visible: isCollapsed"></i>
            </a>
        </li>

        <li data-bind="visible:!isCollapsed()">
            <a href="#"
               id="editorModeLink"
               title="@T("Toggle Editor Mode")"
               data-bind="click:toggleEditorMode , css: { topbaractivelink : editorMode}">
                <i class="icon-pencil"></i> @T("Editor Mode")
            </a>
        </li>

        <li data-bind="visible:!isCollapsed()">
            <a href="#"
               title="@T("Update Changes")"
               data-bind="click: saveEditedPage , visible: isDirty">
                <i id="icon-save" class="icon-save"></i>@T("Save")
            </a>
        </li>

        <li data-bind="visible:!isCollapsed()">
            <a href="#"
               title="@T("Cancel Changes")"
               data-bind="click: cancelChanges , visible: isDirty">
                <i id="icon-remove" class="icon-remove"></i>@T("Cancel")
            </a>
        </li>

        <li>
            <a href="#"
               title="ldkfjal">
                <i class="icon-remove"></i> aqui el usuario
            </a>

        </li>


        <li id="infoarea-wrapper" data-bind="visible:!isCollapsed()">
            <ul id="infoarea">
                <li data-bind="visible: isDirty" title="@T(" changed parts")">
                    <i class="icon-pencil"></i>
                    <span class="badge badge-warning"
                          data-bind="text: dirtyParts().length"></span>
                </li>
            </ul>
        </li>

    </ul>
</div>

@*This helps when debugging:*@
    <pre data-bind="text: JSON.stringify(ko.toJS(inlineEditing.IEPageVM), null, 2)"></pre>
