@using Orchard.ContentManagement;
@using Orchard.Core.Contents;
@using Orchard.Core.Common.Models;
@using Newtonsoft.Json;
@using Orchard.Core.Common.Settings;
@using Orchard.Environment.Descriptor.Models;


@{      
    ContentItem contentItem = (ContentItem)Model.ContentItem;
    BodyPart bodyPart = contentItem.As<BodyPart>();
               
    string escapedContent = Newtonsoft.Json.JsonConvert.SerializeObject(bodyPart.Text);
}

@* Only show ActionControls and only attaches the part to the knockout viewmodel if the user has EditContent permissions*@
@if (AuthorizedFor(Permissions.EditContent) && Model.ContentItem.Id > 0)
{
    // Media Library or Media Picker?
    var shellDescriptor = WorkContext.Resolve<ShellDescriptor>();
    var mediaLibraryEnabled = shellDescriptor.Features.Any(x => x.Name == "Orchard.MediaLibrary");

    if (mediaLibraryEnabled)
    {
        Style.Require("jQueryColorBox").AtFoot();
        Script.Require("jQueryColorBox").AtFoot();
    }
    else
    {   // todo : enable or deprecate mediapicker?
        Script.Require("OrchardMarkdown-MediaPicker");
    }

    
    // Each part attaches itself to the root Knockout viewModel
    using (Script.Foot())
    {
        <script type="text/javascript">
            var bp =  inlineEditing.createBodyPart(@contentItem.Id, '@escapedContent', 'BodyPart', 'html');
            inlineEditing.IEPageVM.parts().push(bp);
        </script>
    };

    // Injecting ActionControls shape
    @Display.InlineEditing_ActionControls(ContentItem: @contentItem , PartTypeName : "BodyPart")

    <div class="inline-editing-body-control highlighter">
        <div class="mce_BodyPart_@contentItem.Id" id="mce_BodyPart_@contentItem.Id">
            @Model.Html
        </div>
    </div>   

}
else
{
    @Model.Html
}